{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register",
        "operationId": "register_user_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login",
        "operationId": "login_user_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/verify-email/{token}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Verify Email Route",
        "operationId": "verify_email_route_user_verify_email__token__get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/resend-verification": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Resend Verification Route",
        "operationId": "resend_verification_route_user_resend_verification_post",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/forgot-password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Forgot Password Route",
        "operationId": "forgot_password_route_user_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/reset-password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Reset Password Route",
        "operationId": "reset_password_route_user_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Profile Route",
        "description": "取得當前登入用戶的資料",
        "operationId": "get_profile_route_user_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Profile Route",
        "operationId": "update_profile_route_user_profile_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/user/password": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Password Route",
        "operationId": "update_password_route_user_password_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/situations/list": {
      "get": {
        "tags": [
          "situations"
        ],
        "summary": "List Situations Route",
        "operationId": "list_situations_route_situations_list_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SituationListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/situations/{situation_id}": {
      "get": {
        "tags": [
          "situations"
        ],
        "summary": "Get Situation Route",
        "operationId": "get_situation_route_situations__situation_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "situation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Situation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SituationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "situations"
        ],
        "summary": "Update Situation Route",
        "operationId": "update_situation_route_situations__situation_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "situation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Situation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SituationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SituationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "situations"
        ],
        "summary": "Delete Situation Route",
        "operationId": "delete_situation_route_situations__situation_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "situation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Situation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/situations/create": {
      "post": {
        "tags": [
          "situations"
        ],
        "summary": "Create Situation Route",
        "operationId": "create_situation_route_situations_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SituationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SituationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/situations/{situation_id}/chapter/list": {
      "get": {
        "tags": [
          "situations"
        ],
        "summary": "List Chapters Route",
        "operationId": "list_chapters_route_situations__situation_id__chapter_list_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "situation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Situation Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/situations/chapter/{chapter_id}": {
      "get": {
        "tags": [
          "situations"
        ],
        "summary": "Get Chapter Route",
        "operationId": "get_chapter_route_situations_chapter__chapter_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "situations"
        ],
        "summary": "Update Chapter Route",
        "operationId": "update_chapter_route_situations_chapter__chapter_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "situations"
        ],
        "summary": "Delete Chapter Route",
        "operationId": "delete_chapter_route_situations_chapter__chapter_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/situations/{situation_id}/chapter/create": {
      "post": {
        "tags": [
          "situations"
        ],
        "summary": "Create Chapter Route",
        "operationId": "create_chapter_route_situations__situation_id__chapter_create_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "situation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Situation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/situations/{situation_id}/chapter/reorder": {
      "patch": {
        "tags": [
          "situations"
        ],
        "summary": "Reorder Chapters Route",
        "operationId": "reorder_chapters_route_situations__situation_id__chapter_reorder_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "situation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Situation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChapterReorder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/situations/chapters/{chapter_id}/sentences": {
      "get": {
        "tags": [
          "situations"
        ],
        "summary": "List Sentences Route",
        "operationId": "list_sentences_route_situations_chapters__chapter_id__sentences_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "situations"
        ],
        "summary": "Create Sentence Route",
        "operationId": "create_sentence_route_situations_chapters__chapter_id__sentences_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SentenceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/situations/sentence/{sentence_id}": {
      "get": {
        "tags": [
          "situations"
        ],
        "summary": "Get Sentence Route",
        "operationId": "get_sentence_route_situations_sentence__sentence_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sentence_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sentence Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "situations"
        ],
        "summary": "Update Sentence Route",
        "operationId": "update_sentence_route_situations_sentence__sentence_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sentence_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sentence Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SentenceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "situations"
        ],
        "summary": "Delete Sentence Route",
        "operationId": "delete_sentence_route_situations_sentence__sentence_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sentence_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sentence Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChapterCreate": {
        "properties": {
          "chapter_name": {
            "type": "string",
            "title": "Chapter Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sequence_number": {
            "type": "integer",
            "title": "Sequence Number"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "video_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Path"
          }
        },
        "type": "object",
        "required": [
          "chapter_name",
          "sequence_number"
        ],
        "title": "ChapterCreate",
        "example": {
          "chapter_name": "餐廳點餐",
          "description": "學習在餐廳用餐時的常用對話，包含點餐、詢問菜品和結帳等情境",
          "sequence_number": 1,
          "video_url": "https://example.com/videos/restaurant_order.mp4"
        }
      },
      "ChapterListResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/ChapterResponse"
            },
            "type": "array",
            "title": "Chapters"
          }
        },
        "type": "object",
        "required": [
          "total",
          "chapters"
        ],
        "title": "ChapterListResponse",
        "example": {
          "chapters": [
            {
              "chapter_id": "550e8400-e29b-41d4-a716-446655440001",
              "chapter_name": "餐廳點餐",
              "created_at": "2025-05-01T06:04:16.148321",
              "description": "學習在餐廳用餐時的常用對話，包含點餐、詢問菜品和結帳等情境",
              "sequence_number": 1,
              "situation_id": "550e8400-e29b-41d4-a716-446655440000",
              "updated_at": "2025-05-01T06:04:16.148463",
              "video_duration": 120.5,
              "video_format": "mp4",
              "video_url": "https://example.com/videos/restaurant_order.mp4"
            }
          ],
          "total": 1
        }
      },
      "ChapterOrder": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "format": "uuid",
            "title": "Chapter Id"
          },
          "sequence_number": {
            "type": "integer",
            "title": "Sequence Number"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "sequence_number"
        ],
        "title": "ChapterOrder",
        "example": {
          "chapter_id": "550e8400-e29b-41d4-a716-446655440001",
          "sequence_number": 2
        }
      },
      "ChapterReorder": {
        "properties": {
          "chapter_orders": {
            "items": {
              "$ref": "#/components/schemas/ChapterOrder"
            },
            "type": "array",
            "title": "Chapter Orders"
          }
        },
        "type": "object",
        "required": [
          "chapter_orders"
        ],
        "title": "ChapterReorder",
        "example": {
          "chapter_orders": [
            {
              "chapter_id": "550e8400-e29b-41d4-a716-446655440001",
              "sequence_number": 2
            },
            {
              "chapter_id": "550e8400-e29b-41d4-a716-446655440002",
              "sequence_number": 1
            }
          ]
        }
      },
      "ChapterResponse": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "format": "uuid",
            "title": "Chapter Id"
          },
          "situation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Situation Id"
          },
          "chapter_name": {
            "type": "string",
            "title": "Chapter Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sequence_number": {
            "type": "integer",
            "title": "Sequence Number"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "situation_id",
          "chapter_name",
          "description",
          "sequence_number",
          "video_url",
          "created_at",
          "updated_at"
        ],
        "title": "ChapterResponse",
        "example": {
          "chapter_id": "550e8400-e29b-41d4-a716-446655440001",
          "chapter_name": "餐廳點餐",
          "created_at": "2025-05-01T06:04:16.148321",
          "description": "學習在餐廳用餐時的常用對話，包含點餐、詢問菜品和結帳等情境",
          "sequence_number": 1,
          "situation_id": "550e8400-e29b-41d4-a716-446655440000",
          "updated_at": "2025-05-01T06:04:16.148463",
          "video_url": "https://example.com/videos/restaurant_order.mp4"
        }
      },
      "ChapterUpdate": {
        "properties": {
          "chapter_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapter Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "sequence_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sequence Number"
          },
          "video_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Url"
          },
          "video_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Path"
          },
          "video_duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Duration"
          },
          "video_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Video Format"
          }
        },
        "type": "object",
        "title": "ChapterUpdate",
        "example": {
          "chapter_name": "餐廳進階對話",
          "description": "學習更進階的餐廳對話，包含特殊需求和處理問題的情境",
          "sequence_number": 2,
          "video_url": "https://example.com/videos/restaurant_advanced.mp4"
        }
      },
      "ForgotPasswordRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "ForgotPasswordRequest"
      },
      "Gender": {
        "type": "string",
        "enum": [
          "male",
          "female",
          "other"
        ],
        "title": "Gender"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "LoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "LoginResponse"
      },
      "RegisterRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 2,
            "title": "Name"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "age": {
            "type": "integer",
            "maximum": 150,
            "minimum": 0,
            "title": "Age"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password",
          "name",
          "gender",
          "age"
        ],
        "title": "RegisterRequest"
      },
      "ResetPasswordRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "password"
        ],
        "title": "ResetPasswordRequest"
      },
      "SentenceCreate": {
        "properties": {
          "sentence_name": {
            "type": "string",
            "title": "Sentence Name"
          },
          "speaker_role": {
            "$ref": "#/components/schemas/SpeakerRole"
          },
          "role_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Description"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          }
        },
        "type": "object",
        "required": [
          "sentence_name",
          "speaker_role",
          "content"
        ],
        "title": "SentenceCreate",
        "example": {
          "content": "我想要一份牛肉麵，不要太辣",
          "end_time": 15.2,
          "role_description": "客人",
          "sentence_name": "基本點餐對話",
          "speaker_role": "self",
          "start_time": 10.5
        }
      },
      "SentenceListResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "sentences": {
            "items": {
              "$ref": "#/components/schemas/SentenceResponse"
            },
            "type": "array",
            "title": "Sentences"
          }
        },
        "type": "object",
        "required": [
          "total",
          "sentences"
        ],
        "title": "SentenceListResponse",
        "example": {
          "sentences": [
            {
              "chapter_id": "550e8400-e29b-41d4-a716-446655440001",
              "content": "我想要一份牛肉麵，不要太辣",
              "created_at": "2025-05-01T06:05:16.517760",
              "end_time": 15.2,
              "role_description": "客人",
              "sentence_id": "550e8400-e29b-41d4-a716-446655440003",
              "sentence_name": "基本點餐對話",
              "speaker_role": "self",
              "start_time": 10.5,
              "updated_at": "2025-05-01T06:05:16.518057"
            }
          ],
          "total": 1
        }
      },
      "SentenceResponse": {
        "properties": {
          "sentence_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sentence Id"
          },
          "chapter_id": {
            "type": "string",
            "format": "uuid",
            "title": "Chapter Id"
          },
          "sentence_name": {
            "type": "string",
            "title": "Sentence Name"
          },
          "speaker_role": {
            "$ref": "#/components/schemas/SpeakerRole"
          },
          "role_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Description"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "sentence_id",
          "chapter_id",
          "sentence_name",
          "speaker_role",
          "role_description",
          "content",
          "start_time",
          "end_time",
          "created_at",
          "updated_at"
        ],
        "title": "SentenceResponse",
        "example": {
          "chapter_id": "550e8400-e29b-41d4-a716-446655440001",
          "content": "我想要一份牛肉麵，不要太辣",
          "created_at": "2025-05-01T06:05:16.517760",
          "end_time": 15.2,
          "role_description": "客人",
          "sentence_id": "550e8400-e29b-41d4-a716-446655440003",
          "sentence_name": "基本點餐對話",
          "speaker_role": "self",
          "start_time": 10.5,
          "updated_at": "2025-05-01T06:05:16.518057"
        }
      },
      "SentenceUpdate": {
        "properties": {
          "sentence_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sentence Name"
          },
          "speaker_role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpeakerRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "role_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Description"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          }
        },
        "type": "object",
        "title": "SentenceUpdate",
        "example": {
          "content": "請給我一份牛肉麵，小辣",
          "end_time": 16,
          "role_description": "客人",
          "sentence_name": "修改後的點餐對話",
          "speaker_role": "self",
          "start_time": 11
        }
      },
      "SituationCreate": {
        "properties": {
          "situation_name": {
            "type": "string",
            "title": "Situation Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "situation_name"
        ],
        "title": "SituationCreate",
        "example": {
          "description": "在餐廳點餐、用餐和結帳的對話情境",
          "location": "餐廳",
          "situation_name": "餐廳用餐"
        }
      },
      "SituationListResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "situations": {
            "items": {
              "$ref": "#/components/schemas/SituationResponse"
            },
            "type": "array",
            "title": "Situations"
          }
        },
        "type": "object",
        "required": [
          "total",
          "situations"
        ],
        "title": "SituationListResponse",
        "example": {
          "situations": [
            {
              "created_at": "2025-05-01T06:03:56.458985",
              "description": "在餐廳點餐、用餐和結帳的對話情境",
              "location": "餐廳",
              "situation_id": "550e8400-e29b-41d4-a716-446655440000",
              "situation_name": "餐廳用餐",
              "updated_at": "2025-05-01T06:03:56.459284"
            }
          ],
          "total": 1
        }
      },
      "SituationResponse": {
        "properties": {
          "situation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Situation Id"
          },
          "situation_name": {
            "type": "string",
            "title": "Situation Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "situation_id",
          "situation_name",
          "description",
          "location",
          "created_at",
          "updated_at"
        ],
        "title": "SituationResponse",
        "example": {
          "created_at": "2025-05-01T06:03:56.458985",
          "description": "在餐廳點餐、用餐和結帳的對話情境",
          "location": "餐廳",
          "situation_id": "550e8400-e29b-41d4-a716-446655440000",
          "situation_name": "餐廳用餐",
          "updated_at": "2025-05-01T06:03:56.459284"
        }
      },
      "SituationUpdate": {
        "properties": {
          "situation_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Situation Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "title": "SituationUpdate",
        "example": {
          "description": "在高級餐廳點餐、用餐和結帳的對話情境",
          "location": "高級餐廳",
          "situation_name": "高級餐廳用餐"
        }
      },
      "SpeakerRole": {
        "type": "string",
        "enum": [
          "self",
          "other"
        ],
        "title": "SpeakerRole"
      },
      "UpdatePasswordRequest": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password"
          },
          "new_password": {
            "type": "string",
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password"
        ],
        "title": "UpdatePasswordRequest"
      },
      "UpdateUserRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "age": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 150,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Age"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UpdateUserRequest"
      },
      "UserResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "account_id": {
            "type": "string",
            "format": "uuid",
            "title": "Account Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "account_id",
          "name",
          "gender",
          "age",
          "phone",
          "role",
          "created_at",
          "updated_at"
        ],
        "title": "UserResponse",
        "example": {
          "account_id": "550e8400-e29b-41d4-a716-446655440000",
          "age": 25,
          "created_at": "2025-05-01T06:03:56.458985",
          "gender": "男",
          "name": "王小明",
          "phone": "0912345678",
          "role": "client",
          "updated_at": "2025-05-01T06:03:56.459284",
          "user_id": "550e8400-e29b-41d4-a716-446655440001"
        }
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "admin",
          "client",
          "therapist"
        ],
        "title": "UserRole"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}